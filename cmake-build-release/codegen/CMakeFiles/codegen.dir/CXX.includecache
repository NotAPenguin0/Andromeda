#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

../codegen/include/codegen/generate.hpp
codegen/parse.hpp
-

../codegen/include/codegen/parse.hpp
filesystem
-
string
-
vector
-
unordered_map
-
cppast/libclang_parser.hpp
-

C:/Users/Michiel/Documents/dev/andromeda/codegen/src/generate.cpp
codegen/generate.hpp
-
fstream
-
set
-
mustache.hpp
-

C:/Users/Michiel/Documents/dev/andromeda/codegen/src/main.cpp
iostream
-
fstream
-
sstream
-
codegen/parse.hpp
-
codegen/generate.hpp
-
set
-

C:/Users/Michiel/Documents/dev/andromeda/codegen/src/parse.cpp
codegen/parse.hpp
-
cppast/cpp_member_variable.hpp
-
cppast/visitor.hpp
-
cppast/cpp_entity_kind.hpp
-
iostream
-

_deps/cppast-lib-src/include/cppast/code_generator.hpp
cstring
-
type_safe/flag_set.hpp
-
type_safe/index.hpp
-
cppast/cpp_entity.hpp
-
cppast/cpp_entity_ref.hpp
-

_deps/cppast-lib-src/include/cppast/compile_config.hpp
string
-
vector
-
type_safe/flag_set.hpp
-
type_safe/reference.hpp
-
cppast/detail/assert.hpp
-

_deps/cppast-lib-src/include/cppast/cpp_attribute.hpp
string
-
vector
-
type_safe/optional.hpp
-
type_safe/optional_ref.hpp
-
cppast/cpp_token.hpp
-

_deps/cppast-lib-src/include/cppast/cpp_class.hpp
cppast/cpp_entity.hpp
-
cppast/cpp_entity_container.hpp
-
cppast/cpp_forward_declarable.hpp
-
cppast/cpp_type.hpp
-

_deps/cppast-lib-src/include/cppast/cpp_entity.hpp
atomic
-
string
-
type_safe/optional_ref.hpp
-
cppast/cpp_attribute.hpp
-
cppast/cpp_token.hpp
-
cppast/detail/intrusive_list.hpp
-

_deps/cppast-lib-src/include/cppast/cpp_entity_container.hpp
cppast/cpp_entity.hpp
-

_deps/cppast-lib-src/include/cppast/cpp_entity_index.hpp
cstdint
-
mutex
-
string
-
unordered_map
-
vector
-
type_safe/optional_ref.hpp
-
type_safe/reference.hpp
-
type_safe/strong_typedef.hpp
-

_deps/cppast-lib-src/include/cppast/cpp_entity_kind.hpp
cppast/detail/assert.hpp
-

_deps/cppast-lib-src/include/cppast/cpp_entity_ref.hpp
vector
-
type_safe/variant.hpp
-
cppast/cpp_entity_index.hpp
-
cppast/detail/assert.hpp
-

_deps/cppast-lib-src/include/cppast/cpp_expression.hpp
atomic
-
memory
-
cppast/cpp_token.hpp
-
cppast/cpp_type.hpp
-

_deps/cppast-lib-src/include/cppast/cpp_file.hpp
vector
-
cppast/cpp_entity_container.hpp
-
cppast/cpp_entity_index.hpp
-
cppast/cpp_entity_ref.hpp
-

_deps/cppast-lib-src/include/cppast/cpp_forward_declarable.hpp
type_traits
-
type_safe/optional.hpp
-
cppast/cpp_entity.hpp
-
cppast/cpp_entity_ref.hpp
-

_deps/cppast-lib-src/include/cppast/cpp_member_variable.hpp
cppast/cpp_entity.hpp
-
cppast/cpp_variable_base.hpp
-

_deps/cppast-lib-src/include/cppast/cpp_preprocessor.hpp
type_safe/optional.hpp
-
cppast/cpp_entity.hpp
-
cppast/cpp_file.hpp
-

_deps/cppast-lib-src/include/cppast/cpp_token.hpp
string
-
vector
-
type_safe/reference.hpp
-

_deps/cppast-lib-src/include/cppast/cpp_type.hpp
atomic
-
memory
-
cppast/code_generator.hpp
-
cppast/cpp_entity_ref.hpp
-
cppast/detail/intrusive_list.hpp
-

_deps/cppast-lib-src/include/cppast/cpp_variable_base.hpp
cppast/cpp_expression.hpp
-
cppast/cpp_type.hpp
-

_deps/cppast-lib-src/include/cppast/detail/assert.hpp
debug_assert.hpp
-

_deps/cppast-lib-src/include/cppast/detail/intrusive_list.hpp
iterator
-
memory
-
type_safe/optional_ref.hpp
-
cppast/detail/assert.hpp
-

_deps/cppast-lib-src/include/cppast/diagnostic.hpp
sstream
-
string
-
type_safe/optional.hpp
-

_deps/cppast-lib-src/include/cppast/diagnostic_logger.hpp
type_safe/reference.hpp
-
cppast/diagnostic.hpp
-

_deps/cppast-lib-src/include/cppast/libclang_parser.hpp
stdexcept
-
cppast/parser.hpp
-

_deps/cppast-lib-src/include/cppast/parser.hpp
atomic
-
cppast/compile_config.hpp
-
cppast/cpp_file.hpp
-
cppast/cpp_preprocessor.hpp
-
cppast/diagnostic.hpp
-
cppast/diagnostic_logger.hpp
-

_deps/cppast-lib-src/include/cppast/visitor.hpp
type_traits
-
cppast/cpp_class.hpp
-
cppast/cpp_entity.hpp
-
cppast/cpp_entity_kind.hpp
-

_deps/mustache-src/mustache.hpp
cassert
-
cctype
-
functional
-
iostream
-
memory
-
sstream
-
unordered_map
-
vector
-

_deps/type_safe-src/external/debug_assert/debug_assert.hpp
cstdlib
-
cstdio
-

_deps/type_safe-src/include/type_safe/arithmetic_policy.hpp
limits
-
stdexcept
-
type_traits
-
type_safe/config.hpp
-
type_safe/detail/assert.hpp
-
type_safe/detail/force_inline.hpp
-

_deps/type_safe-src/include/type_safe/boolean.hpp
functional
-
iosfwd
-
type_traits
-
utility
-
type_safe/detail/force_inline.hpp
-

_deps/type_safe-src/include/type_safe/config.hpp
cstddef
-
cstdlib
-

_deps/type_safe-src/include/type_safe/detail/aligned_union.hpp
type_traits
-

_deps/type_safe-src/include/type_safe/detail/all_of.hpp
type_traits
-

_deps/type_safe-src/include/type_safe/detail/assert.hpp
debug_assert.hpp
-
type_safe/config.hpp
-

_deps/type_safe-src/include/type_safe/detail/assign_or_construct.hpp
type_traits
-

_deps/type_safe-src/include/type_safe/detail/constant_parser.hpp
type_traits
-

_deps/type_safe-src/include/type_safe/detail/copy_move_control.hpp

_deps/type_safe-src/include/type_safe/detail/force_inline.hpp
debug_assert.hpp
-

_deps/type_safe-src/include/type_safe/detail/is_nothrow_swappable.hpp
utility
-

_deps/type_safe-src/include/type_safe/detail/map_invoke.hpp
utility
-

_deps/type_safe-src/include/type_safe/detail/variant_impl.hpp
type_safe/detail/all_of.hpp
-
type_safe/detail/assign_or_construct.hpp
-
type_safe/detail/copy_move_control.hpp
-
type_safe/detail/is_nothrow_swappable.hpp
-
type_safe/optional.hpp
-
type_safe/tagged_union.hpp
-

_deps/type_safe-src/include/type_safe/flag.hpp
type_safe/boolean.hpp
-
type_safe/detail/assert.hpp
-

_deps/type_safe-src/include/type_safe/flag_set.hpp
climits
-
cstdint
-
type_traits
-
type_safe/flag.hpp
-
type_safe/types.hpp
-

_deps/type_safe-src/include/type_safe/floating_point.hpp
functional
-
iosfwd
-
type_traits
-
type_safe/detail/force_inline.hpp
-

_deps/type_safe-src/include/type_safe/index.hpp
cstddef
-
type_safe/config.hpp
-
type_safe/strong_typedef.hpp
-
type_safe/types.hpp
-

_deps/type_safe-src/include/type_safe/integer.hpp
functional
-
iosfwd
-
limits
-
type_traits
-
type_safe/arithmetic_policy.hpp
-
type_safe/detail/assert.hpp
-
type_safe/detail/force_inline.hpp
-

_deps/type_safe-src/include/type_safe/optional.hpp
functional
-
new
-
type_traits
-
type_safe/detail/assert.hpp
-
type_safe/detail/assign_or_construct.hpp
-
type_safe/detail/copy_move_control.hpp
-
type_safe/detail/is_nothrow_swappable.hpp
-
type_safe/detail/map_invoke.hpp
-

_deps/type_safe-src/include/type_safe/optional_ref.hpp
type_safe/optional.hpp
-
type_safe/reference.hpp
-

_deps/type_safe-src/include/type_safe/reference.hpp
new
-
type_traits
-
utility
-
type_safe/detail/aligned_union.hpp
-
type_safe/detail/assert.hpp
-
type_safe/detail/map_invoke.hpp
-
type_safe/index.hpp
-

_deps/type_safe-src/include/type_safe/strong_typedef.hpp
iosfwd
-
iterator
-
type_traits
-
utility
-
type_safe/config.hpp
-
type_safe/detail/all_of.hpp
-

_deps/type_safe-src/include/type_safe/tagged_union.hpp
new
-
type_safe/config.hpp
-
type_safe/detail/aligned_union.hpp
-
type_safe/detail/all_of.hpp
-
type_safe/detail/assert.hpp
-
type_safe/strong_typedef.hpp
-

_deps/type_safe-src/include/type_safe/types.hpp
cmath
-
cstddef
-
cstdint
-
limits
-
type_safe/boolean.hpp
-
type_safe/config.hpp
-
type_safe/detail/constant_parser.hpp
-
type_safe/floating_point.hpp
-
type_safe/integer.hpp
-

_deps/type_safe-src/include/type_safe/variant.hpp
type_safe/detail/variant_impl.hpp
-
type_safe/optional_ref.hpp
-

